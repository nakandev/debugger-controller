
test.elf:     ファイル形式 elf64-x86-64


セクション .init の逆アセンブル:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 2f 00 00 	mov    0x2fc1(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

セクション .plt の逆アセンブル:

0000000000001020 <.plt>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

セクション .plt.got の逆アセンブル:

0000000000001030 <__cxa_finalize@plt>:
    1030:	ff 25 aa 2f 00 00    	jmp    *0x2faa(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1036:	66 90                	xchg   %ax,%ax

セクション .text の逆アセンブル:

0000000000001040 <_start>:
    1040:	f3 0f 1e fa          	endbr64
    1044:	31 ed                	xor    %ebp,%ebp
    1046:	49 89 d1             	mov    %rdx,%r9
    1049:	5e                   	pop    %rsi
    104a:	48 89 e2             	mov    %rsp,%rdx
    104d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1051:	50                   	push   %rax
    1052:	54                   	push   %rsp
    1053:	45 31 c0             	xor    %r8d,%r8d
    1056:	31 c9                	xor    %ecx,%ecx
    1058:	48 8d 3d c1 01 00 00 	lea    0x1c1(%rip),%rdi        # 1220 <main>
    105f:	ff 15 5b 2f 00 00    	call   *0x2f5b(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    1065:	f4                   	hlt
    1066:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    106d:	00 00 00 

0000000000001070 <deregister_tm_clones>:
    1070:	48 8d 3d 99 2f 00 00 	lea    0x2f99(%rip),%rdi        # 4010 <__TMC_END__>
    1077:	48 8d 05 92 2f 00 00 	lea    0x2f92(%rip),%rax        # 4010 <__TMC_END__>
    107e:	48 39 f8             	cmp    %rdi,%rax
    1081:	74 15                	je     1098 <deregister_tm_clones+0x28>
    1083:	48 8b 05 3e 2f 00 00 	mov    0x2f3e(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    108a:	48 85 c0             	test   %rax,%rax
    108d:	74 09                	je     1098 <deregister_tm_clones+0x28>
    108f:	ff e0                	jmp    *%rax
    1091:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1098:	c3                   	ret
    1099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010a0 <register_tm_clones>:
    10a0:	48 8d 3d 69 2f 00 00 	lea    0x2f69(%rip),%rdi        # 4010 <__TMC_END__>
    10a7:	48 8d 35 62 2f 00 00 	lea    0x2f62(%rip),%rsi        # 4010 <__TMC_END__>
    10ae:	48 29 fe             	sub    %rdi,%rsi
    10b1:	48 89 f0             	mov    %rsi,%rax
    10b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    10b8:	48 c1 f8 03          	sar    $0x3,%rax
    10bc:	48 01 c6             	add    %rax,%rsi
    10bf:	48 d1 fe             	sar    %rsi
    10c2:	74 14                	je     10d8 <register_tm_clones+0x38>
    10c4:	48 8b 05 0d 2f 00 00 	mov    0x2f0d(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    10cb:	48 85 c0             	test   %rax,%rax
    10ce:	74 08                	je     10d8 <register_tm_clones+0x38>
    10d0:	ff e0                	jmp    *%rax
    10d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    10d8:	c3                   	ret
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <__do_global_dtors_aux>:
    10e0:	f3 0f 1e fa          	endbr64
    10e4:	80 3d 25 2f 00 00 00 	cmpb   $0x0,0x2f25(%rip)        # 4010 <__TMC_END__>
    10eb:	75 2b                	jne    1118 <__do_global_dtors_aux+0x38>
    10ed:	55                   	push   %rbp
    10ee:	48 83 3d ea 2e 00 00 	cmpq   $0x0,0x2eea(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    10f5:	00 
    10f6:	48 89 e5             	mov    %rsp,%rbp
    10f9:	74 0c                	je     1107 <__do_global_dtors_aux+0x27>
    10fb:	48 8b 3d 06 2f 00 00 	mov    0x2f06(%rip),%rdi        # 4008 <__dso_handle>
    1102:	e8 29 ff ff ff       	call   1030 <__cxa_finalize@plt>
    1107:	e8 64 ff ff ff       	call   1070 <deregister_tm_clones>
    110c:	c6 05 fd 2e 00 00 01 	movb   $0x1,0x2efd(%rip)        # 4010 <__TMC_END__>
    1113:	5d                   	pop    %rbp
    1114:	c3                   	ret
    1115:	0f 1f 00             	nopl   (%rax)
    1118:	c3                   	ret
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <frame_dummy>:
    1120:	f3 0f 1e fa          	endbr64
    1124:	e9 77 ff ff ff       	jmp    10a0 <register_tm_clones>
    1129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001130 <func1_1>:
    1130:	55                   	push   %rbp
    1131:	48 89 e5             	mov    %rsp,%rbp
    1134:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1137:	89 75 f8             	mov    %esi,-0x8(%rbp)
    113a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1141:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1148:	83 7d f0 14          	cmpl   $0x14,-0x10(%rbp)
    114c:	0f 8d 17 00 00 00    	jge    1169 <func1_1+0x39>
    1152:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1155:	03 45 f4             	add    -0xc(%rbp),%eax
    1158:	89 45 f4             	mov    %eax,-0xc(%rbp)
    115b:	8b 45 f0             	mov    -0x10(%rbp),%eax
    115e:	83 c0 01             	add    $0x1,%eax
    1161:	89 45 f0             	mov    %eax,-0x10(%rbp)
    1164:	e9 df ff ff ff       	jmp    1148 <func1_1+0x18>
    1169:	8b 45 f4             	mov    -0xc(%rbp),%eax
    116c:	0f af 45 f8          	imul   -0x8(%rbp),%eax
    1170:	89 45 f4             	mov    %eax,-0xc(%rbp)
    1173:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1176:	5d                   	pop    %rbp
    1177:	c3                   	ret
    1178:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    117f:	00 

0000000000001180 <func1_2>:
    1180:	55                   	push   %rbp
    1181:	48 89 e5             	mov    %rsp,%rbp
    1184:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1187:	89 75 f8             	mov    %esi,-0x8(%rbp)
    118a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1191:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1198:	83 7d f0 32          	cmpl   $0x32,-0x10(%rbp)
    119c:	0f 8d 17 00 00 00    	jge    11b9 <func1_2+0x39>
    11a2:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11a5:	03 45 f4             	add    -0xc(%rbp),%eax
    11a8:	89 45 f4             	mov    %eax,-0xc(%rbp)
    11ab:	8b 45 f0             	mov    -0x10(%rbp),%eax
    11ae:	83 c0 01             	add    $0x1,%eax
    11b1:	89 45 f0             	mov    %eax,-0x10(%rbp)
    11b4:	e9 df ff ff ff       	jmp    1198 <func1_2+0x18>
    11b9:	8b 45 f4             	mov    -0xc(%rbp),%eax
    11bc:	99                   	cltd
    11bd:	f7 7d f8             	idivl  -0x8(%rbp)
    11c0:	89 45 f4             	mov    %eax,-0xc(%rbp)
    11c3:	8b 45 f4             	mov    -0xc(%rbp),%eax
    11c6:	5d                   	pop    %rbp
    11c7:	c3                   	ret
    11c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    11cf:	00 

00000000000011d0 <func1>:
    11d0:	55                   	push   %rbp
    11d1:	48 89 e5             	mov    %rsp,%rbp
    11d4:	48 83 ec 10          	sub    $0x10,%rsp
    11d8:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11db:	89 75 f8             	mov    %esi,-0x8(%rbp)
    11de:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11e1:	3b 45 f8             	cmp    -0x8(%rbp),%eax
    11e4:	0f 8e 13 00 00 00    	jle    11fd <func1+0x2d>
    11ea:	8b 7d fc             	mov    -0x4(%rbp),%edi
    11ed:	8b 75 f8             	mov    -0x8(%rbp),%esi
    11f0:	e8 3b ff ff ff       	call   1130 <func1_1>
    11f5:	89 45 f4             	mov    %eax,-0xc(%rbp)
    11f8:	e9 0e 00 00 00       	jmp    120b <func1+0x3b>
    11fd:	8b 7d f8             	mov    -0x8(%rbp),%edi
    1200:	8b 75 fc             	mov    -0x4(%rbp),%esi
    1203:	e8 78 ff ff ff       	call   1180 <func1_2>
    1208:	89 45 f4             	mov    %eax,-0xc(%rbp)
    120b:	8b 45 f4             	mov    -0xc(%rbp),%eax
    120e:	48 83 c4 10          	add    $0x10,%rsp
    1212:	5d                   	pop    %rbp
    1213:	c3                   	ret
    1214:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    121b:	00 00 00 00 00 

0000000000001220 <main>:
    1220:	55                   	push   %rbp
    1221:	48 89 e5             	mov    %rsp,%rbp
    1224:	48 83 ec 10          	sub    $0x10,%rsp
    1228:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    122f:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%rbp)
    1236:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%rbp)
    123d:	8b 7d f8             	mov    -0x8(%rbp),%edi
    1240:	8b 75 f4             	mov    -0xc(%rbp),%esi
    1243:	e8 88 ff ff ff       	call   11d0 <func1>
    1248:	89 45 f0             	mov    %eax,-0x10(%rbp)
    124b:	83 7d f0 0a          	cmpl   $0xa,-0x10(%rbp)
    124f:	0f 8e 0c 00 00 00    	jle    1261 <main+0x41>
    1255:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
    125c:	e9 07 00 00 00       	jmp    1268 <main+0x48>
    1261:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1268:	8b 45 fc             	mov    -0x4(%rbp),%eax
    126b:	48 83 c4 10          	add    $0x10,%rsp
    126f:	5d                   	pop    %rbp
    1270:	c3                   	ret

セクション .fini の逆アセンブル:

0000000000001274 <_fini>:
    1274:	f3 0f 1e fa          	endbr64
    1278:	48 83 ec 08          	sub    $0x8,%rsp
    127c:	48 83 c4 08          	add    $0x8,%rsp
    1280:	c3                   	ret
